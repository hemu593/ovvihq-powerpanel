var Validate = function() 
{
    var handleValidations = function() 
    {
        $("#frm{{ modelName }}").validate({
            errorElement: 'span',
            errorClass: 'help-block',
            ignore:[],
            rules: {
                {{ validationRules }}
            },
            messages: {
                {{ validationMessages }}
            },
            errorPlacement: function (error, element) { 
            if (element.parent('.input-group').length) { error.insertAfter(element.parent()); } else if (element.hasClass('select2')) { error.insertAfter(element.next('span')); } else { error.insertAfter(element); } },
            invalidHandler: function(event, validator) {
                var errors = validator.numberOfInvalids();
                if (errors) {
                    $.loader.close(true);
                }
                $('.alert-danger', $('#frm{{ modelName }}')).show();
            },
            highlight: function(element) {
                $(element).closest('.form-group').addClass('has-error');
            },
            unhighlight: function(element) {
                $(element).closest('.form-group').removeClass('has-error');
            },
            submitHandler: function (form) {
                $('body').loader(loaderConfig);
                form.submit();
                return false;
            }
        });
        
        $('#frm{{ modelName }} input').keypress(function(e) {
            if (e.which == 13) {
                if ($('#frm{{ modelName }}').validate().form()) {
                    $('#frm{{ modelName }}').submit();
                }
                return false;
            }
        });
    }
    return {
        init: function() {
            handleValidations();
        }
    };
}();
jQuery(document).ready(function() {
     Validate.init();
     jQuery.validator.addMethod("noSpace", function(value, element){
        if(value.trim().length <= 0){
            return false;
        }else{
            return true;
        }
    }, "This field is required");
});
jQuery.validator.addMethod("phoneFormat", function(value, element) {
    return this.optional( element ) || /((\(\d{3}\) ?)|(\d{3}-))?\d{3}-\d{4}/.test( value );
}, 'Please enter a valid phone number.');
jQuery.validator.addMethod("noSpace", function(value, element){
    if(value.trim().length <= 0){
        return false;
    }else{
        return true;    
    }
}, "This field is required");
jQuery.validator.addMethod("minStrict", function(value, element) {
    if(value>0){
        return true;
    }else{
        return false;
    }
}, 'Display order must be a number higher than zero');
